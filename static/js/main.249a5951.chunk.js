(this["webpackJsonpfirst-app"]=this["webpackJsonpfirst-app"]||[]).push([[0],{11:function(e,n,t){"use strict";t.r(n);var o,i=t(1),r=t.n(i),c=t(3),l=t.n(c),s=(t(8),t(9),t(0)),a={},u={},h={},g={},f={},d=0,v=0,p=0,w=0;function b(){var e=[];e.push({name:"BAT Tree"});var n={};n.filters=e,n.optionalServices=[65504],console.log("Reqeusting Bluetooth Device..."),console.log("with "+JSON.stringify(n)),navigator.bluetooth.requestDevice(n).then((function(e){return console.log("Connecting to GATT Server..."),e.gatt.connect()})).then((function(e){return console.log("Getting Primary Service..."),e.getPrimaryService(65504)})).then((function(e){return console.log("Getting Custom Characteristic..."),e.getCharacteristic(65505)})).then((function(e){console.log("We got all the way to the end!"),(o=e).addEventListener("characteristicvaluechanged",m),o.startNotifications()})).then((function(e){f=a,o.writeValueWithoutResponse((new TextEncoder).encode("NumPat\n"))})).catch((function(e){console.log("WRONG! "+e)}))}function m(e){var n=String.fromCharCode.apply(null,new Uint8Array(e.target.value.buffer));if("EOE"!==n){if(f===a){if(d=parseInt(n),console.log("The number of patterns is "+d),0===d)return void console.log("Uh... I guess I need to handle this. But for now, it will break me.");o.writeValueWithoutResponse((new TextEncoder).encode("GetPat 0\n")),v=1,f=u}else if(f===u)if(console.log("Pattern "+v+": "+n),d>v){var t="GetPat "+v+"\n";o.writeValueWithoutResponse((new TextEncoder).encode(t)),v++}else console.log("I have received all of my patterns?"),f=h,o.writeValueWithoutResponse((new TextEncoder).encode("NumAni\n"));else if(f===h){if(0===(p=parseInt(n)))return void console.log("Same blah blah broken blah blah");o.writeValueWithoutResponse((new TextEncoder).encode("GetAni 0\n")),w=1,f=g}else if(f===g)if(console.log("Animation "+w+": "+n),p>w){var i="GetAni "+w+"\n";o.writeValueWithoutResponse((new TextEncoder).encode(i)),w++}else console.log("I have received all of my animations?")}else console.log("Let us ignore the EOE, shall we?")}var T=function(){return console.log("Hey there"),console.log(r.a.version),Object(s.jsxs)("div",{className:"App",children:[Object(s.jsx)("h1",{children:"BAT Trees are fun"}),Object(s.jsx)("button",{onClick:b,children:"Connect"})]})},E=function(e){e&&e instanceof Function&&t.e(3).then(t.bind(null,12)).then((function(n){var t=n.getCLS,o=n.getFID,i=n.getFCP,r=n.getLCP,c=n.getTTFB;t(e),o(e),i(e),r(e),c(e)}))};l.a.render(Object(s.jsx)(r.a.StrictMode,{children:Object(s.jsx)(T,{})}),document.getElementById("root")),E()},8:function(e,n,t){},9:function(e,n,t){}},[[11,1,2]]]);
//# sourceMappingURL=main.249a5951.chunk.js.map